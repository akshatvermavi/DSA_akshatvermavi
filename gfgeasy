class Solution{

private:
    bool check(int i , int j , int n , int m){
        if(i>=0 && i<n && j>=0 && j<m) return true;
        return false;
    }
    

public:
    vector<int> matrixSum(int n, int m, vector<vector<int>> mat, int q, vector<int> queries[])
    {
        // code here
        vector<int> ans;
        // queue<pair<int,int>> q;
        for(int i=0; i<q; i++){
            int hop = queries[i][0];
            int row = queries[i][1];
            int col = queries[i][2];
            
            
            int res=0;
            for(int r = row-hop; r<=row+hop; r++){
                if(check(r , col-hop , n , m)){
                res+=mat[r][col-hop];
                }
                
                
                if(check(r , col+hop , n , m)){
                 res+=mat[r][col+hop];
                }
            }
            for(int c=col-hop+1; c<=col+hop-1; c++){
                if(check(row-hop , c , n , m)){
                 res+=mat[row-hop][c];
                }
                if(check(row+hop , c , n , m)) {
                    res+=mat[row+hop][c];
                }
            
            }
            ans.push_back(res);
        
            
        }
        return ans;
    }
};
